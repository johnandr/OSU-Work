Question 1)
            DOG and GOD
    hash1(DOG) = 68 + 79 + 71 = 218
    hash1(GOD) = 71 + 79 + 68 = 218
    
    hash2(DOG) = (68 * 1) + (79 * 2) + (71 * 3) = 439
    hash2(GOD) = (71 * 1) + (79 * 2) + (68 * 3) = 433

Question 2)
    Hash2 takes into account the positon of the letters, whereas hash1 only
    cares about what letters are in the word.

Question 3)
    The size function doesn't rely on which hash function is used. There will
    be the same amount of hashlinks using either.

Question 4)
   The tableload wont change either since the program will call for a resize
   at the same time, not matterig on which hash function is called.

Question 5)
    The emptyBuckets function will have a difference with which hash function
    you use. Where hash1 would be more spiked and hash2 would be flatter,
    since it's spreads out more than hash1.

Question 6)
    When going to an even number to a prime number. The amount of emptyBuckets
    should decrease since there as less ways to mod into a prime number.

Question 7)
    As the tablesize increases so does the preformance of the hashtable, i.e.
    Using big.txt with 10 buckets took 8.7 secs, and with 1000000 buckets it
    took < 1 sec.
